// <auto-generated />
using System;
using BattlestaHealthChecks.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BattlestaHealthChecks.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200316175329_another")]
    partial class another
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattlestaHealthChecks.Models.BackupSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CredentialPath");

                    b.Property<int>("HourInterval");

                    b.Property<DateTime>("LastDate");

                    b.HasKey("Id");

                    b.ToTable("BackupSettings");
                });

            modelBuilder.Entity("BattlestaHealthChecks.Models.CheckedElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<long>("LoadTime");

                    b.Property<string>("Name");

                    b.Property<int?>("SampleId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("SampleId");

                    b.ToTable("CheckedElement");
                });

            modelBuilder.Entity("BattlestaHealthChecks.Models.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.ToTable("Sample");
                });

            modelBuilder.Entity("BattlestaHealthChecks.Models.SampleSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("MaxLoadTime");

                    b.Property<string>("StartPage");

                    b.Property<int>("TimeInterval");

                    b.HasKey("Id");

                    b.ToTable("SampleSettings");
                });

            modelBuilder.Entity("BattlestaHealthChecks.Models.CheckedElement", b =>
                {
                    b.HasOne("BattlestaHealthChecks.Models.Sample", "Sample")
                        .WithMany("Elements")
                        .HasForeignKey("SampleId");
                });
#pragma warning restore 612, 618
        }
    }
}
